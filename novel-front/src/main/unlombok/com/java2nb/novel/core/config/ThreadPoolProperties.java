// Generated by delombok at Mon May 09 23:17:28 CST 2022
package com.java2nb.novel.core.config;

import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.stereotype.Component;

/**
 * 线程池配置属性
 * @author xiongxiaoyang
 */
@Component
@ConfigurationProperties(prefix = "thread.pool")
public class ThreadPoolProperties {
    private Integer corePoolSize;
    private Integer maximumPoolSize;
    private Long keepAliveTime;
    private Integer queueSize;

    @java.lang.SuppressWarnings("all")
    public ThreadPoolProperties() {
    }

    @java.lang.SuppressWarnings("all")
    public Integer getCorePoolSize() {
        return this.corePoolSize;
    }

    @java.lang.SuppressWarnings("all")
    public Integer getMaximumPoolSize() {
        return this.maximumPoolSize;
    }

    @java.lang.SuppressWarnings("all")
    public Long getKeepAliveTime() {
        return this.keepAliveTime;
    }

    @java.lang.SuppressWarnings("all")
    public Integer getQueueSize() {
        return this.queueSize;
    }

    @java.lang.SuppressWarnings("all")
    public void setCorePoolSize(final Integer corePoolSize) {
        this.corePoolSize = corePoolSize;
    }

    @java.lang.SuppressWarnings("all")
    public void setMaximumPoolSize(final Integer maximumPoolSize) {
        this.maximumPoolSize = maximumPoolSize;
    }

    @java.lang.SuppressWarnings("all")
    public void setKeepAliveTime(final Long keepAliveTime) {
        this.keepAliveTime = keepAliveTime;
    }

    @java.lang.SuppressWarnings("all")
    public void setQueueSize(final Integer queueSize) {
        this.queueSize = queueSize;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof ThreadPoolProperties)) return false;
        final ThreadPoolProperties other = (ThreadPoolProperties) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$corePoolSize = this.getCorePoolSize();
        final java.lang.Object other$corePoolSize = other.getCorePoolSize();
        if (this$corePoolSize == null ? other$corePoolSize != null : !this$corePoolSize.equals(other$corePoolSize)) return false;
        final java.lang.Object this$maximumPoolSize = this.getMaximumPoolSize();
        final java.lang.Object other$maximumPoolSize = other.getMaximumPoolSize();
        if (this$maximumPoolSize == null ? other$maximumPoolSize != null : !this$maximumPoolSize.equals(other$maximumPoolSize)) return false;
        final java.lang.Object this$keepAliveTime = this.getKeepAliveTime();
        final java.lang.Object other$keepAliveTime = other.getKeepAliveTime();
        if (this$keepAliveTime == null ? other$keepAliveTime != null : !this$keepAliveTime.equals(other$keepAliveTime)) return false;
        final java.lang.Object this$queueSize = this.getQueueSize();
        final java.lang.Object other$queueSize = other.getQueueSize();
        if (this$queueSize == null ? other$queueSize != null : !this$queueSize.equals(other$queueSize)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof ThreadPoolProperties;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $corePoolSize = this.getCorePoolSize();
        result = result * PRIME + ($corePoolSize == null ? 43 : $corePoolSize.hashCode());
        final java.lang.Object $maximumPoolSize = this.getMaximumPoolSize();
        result = result * PRIME + ($maximumPoolSize == null ? 43 : $maximumPoolSize.hashCode());
        final java.lang.Object $keepAliveTime = this.getKeepAliveTime();
        result = result * PRIME + ($keepAliveTime == null ? 43 : $keepAliveTime.hashCode());
        final java.lang.Object $queueSize = this.getQueueSize();
        result = result * PRIME + ($queueSize == null ? 43 : $queueSize.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "ThreadPoolProperties(corePoolSize=" + this.getCorePoolSize() + ", maximumPoolSize=" + this.getMaximumPoolSize() + ", keepAliveTime=" + this.getKeepAliveTime() + ", queueSize=" + this.getQueueSize() + ")";
    }
}
